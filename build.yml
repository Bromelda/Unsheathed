name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      # Also the .dll name
      PROJECT_NAME: Unsheathed
      THUNDERSTORE_NAME: Unsheathed
      THUNDERSTORE_NAMESPACE: Bromelda

    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore dependencies
        run: dotnet restore

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          additionalArguments: '/updateprojectfiles /overrideconfig "mode=Mainline"'

      - name: Build (Release)
        run: dotnet build . --configuration Release --no-restore -p:Version=$GitVersion_SemVer

      - name: Update project constants in toml file
        run: |
          sed -i 's/__VERSION__/${{ env.GitVersion_MajorMinorPatch }}/g' ./thunderstore.toml
          sed -i 's/__GITHUB_REPO__/${{ env.GITHUB_REPOSITORY }}/g' ./thunderstore.toml
          sed -i 's/__PROJECT_NAME__/${{ env.PROJECT_NAME }}/g' ./thunderstore.toml
          sed -i 's/__NAME__/${{ env.THUNDERSTORE_NAME }}/g' ./thunderstore.toml
          sed -i 's/__NAMESPACE__/${{ env.THUNDERSTORE_NAMESPACE }}/g' ./thunderstore.toml

      - name: Install Thunderstore CLI (tcli)
        run: dotnet tool install --global tcli

      - name: Build Thunderstore package
        run: tcli build --config-path ./thunderstore.toml

      - name: Upload artifacts during pipeline for testing
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore packages
          path: |
            ./build/${{ env.THUNDERSTORE_NAMESPACE }}-${{ env.THUNDERSTORE_NAME }}-${{ env.GitVersion_MajorMinorPatch }}.zip
          retention-days: 1
          compression-level: 0 # no compression      

# TODO when ready to make github releases
#      - name: GH Release
#        uses: softprops/action-gh-release@v2
#        if: github.event_name == 'push'
#        with:
#          body: Automatic pre-release of ${{ env.GitVersion_MajorMinorPatch }} for ${{ env.GitVersion_ShortSha }}
#          name: v${{ env.GitVersion_MajorMinorPatch }}
#          fail_on_unmatched_files: true
#          prerelease: true
#          tag_name: v${{ env.GitVersion_MajorMinorPatch }}
#          files: |
#            ./build/${{ env.THUNDERSTORE_NAMESPACE }}-${{ env.THUNDERSTORE_NAME }}-${{ env.GitVersion_MajorMinorPatch }}.zip
